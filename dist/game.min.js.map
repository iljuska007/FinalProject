{"version":3,"sources":["game.js"],"names":["canvas","document","getElementById","ctx","getContext","startButton","helpModal","title","gameOverSound","Audio","closeHelpButton","width","window","innerWidth","height","innerHeight","resizeCanvas","addEventListener","pipeTop","Image","src","pipeBottom","gameOverImage","backgroundImage1","backgroundImage2","x","y","gravity","bird","velocity","pipes","pipeGap","lift","isGameOver","pipeWidth","localStorage","getItem","parseInt","e","frameCount","key","score","beepSound","volume","bestScore","resetGame","display","style","play","startCountdown","helloSound","setInterval","clearRect","fillStyle","textAlign","textBaseline","countdown","clearInterval","countdownInterval","levelUp","alert","level","backgroundImage","helpButton","update","Math","random","pipeY","filter","pipe","forEach","setItem","location","href","drawImage","birdImage","save","scale","restore","fillText","concat","removeItem","draw","gameLoop"],"mappings":"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","file":"game.min.js","sourcesContent":["const canvas = document.getElementById('gameCanvas');\r\nconst ctx = canvas.getContext('2d');\r\nconst startButton = document.getElementById('startButton');  // Кнопка \"Начать игру\"\r\nconst title = document.getElementById('title');  // Заголовок \"Flappy Mario\"\r\nconst helpButton = document.getElementById('helpButton'); // Кнопка \"Help\"\r\nconst helpModal = document.getElementById('helpModal'); // Модальное окно\r\nconst closeHelpButton = document.getElementById('closeHelp'); // Кнопка \"Закрыть\" в модальном окне\r\n\r\n// Звук проигрыша\r\nconst gameOverSound = new Audio('https://www.myinstants.com/media/sounds/roblox-death-sound-effect.mp3');\r\n\r\n// Установка размера canvas на весь экран\r\nfunction resizeCanvas() {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n}\r\nresizeCanvas();\r\nwindow.addEventListener('resize', resizeCanvas);  // Обновляем размеры канваса при изменении окна\r\n\r\n// Загрузка изображений для верхней и нижней части труб\r\nconst pipeTop = new Image();\r\npipeTop.src = 'https://png.klev.club/uploads/posts/2024-04/png-klev-club-o9dc-p-truba-iz-mario-png-16.png';  // Путь к изображению верхней части трубы\r\n\r\nconst pipeBottom = new Image();\r\npipeBottom.src = 'https://png.klev.club/uploads/posts/2024-04/png-klev-club-o9dc-p-truba-iz-mario-png-16.png';  // Путь к изображению нижней части трубы\r\n\r\n// Картинка для поражения (Потрачено)\r\nconst gameOverImage = new Image();\r\ngameOverImage.src = 'https://png.klev.club/uploads/posts/2024-04/thumbs/png-klev-club-kn72-p-potracheno-png-8.png'; // Картинка для поражения\r\n\r\n// Фон для первого уровня\r\nconst backgroundImage1 = new Image();\r\nbackgroundImage1.src = 'https://fotoblik.ru/wp-content/uploads/2023/09/stardew-valley-oboi-13.webp'; // Фон игры для первого уровня\r\n\r\n// Фон для второго уровня\r\nconst backgroundImage2 = new Image();\r\nbackgroundImage2.src = 'https://kartinkin.net/uploads/posts/2021-03/1616042272_29-p-pikselnii-fon-dlya-igri-32.jpg'; // Фон для второго уровня\r\n\r\nlet bird = {\r\n    x: 150,\r\n    y: canvas.height / 2,\r\n    width: 80,  // Увеличиваем ширину птицы\r\n    height: 80, // Увеличиваем высоту птицы\r\n    gravity: 0.3,\r\n    lift: -12,  // Увеличиваем силу отталкивания, чтобы птица прыгала выше\r\n    velocity: 0\r\n};\r\n\r\nlet pipes = [];\r\nlet pipeWidth = 80;  // Ширина трубы\r\nlet pipeGap = canvas.height / 3; // Зазор между колоннами (по умолчанию для первого уровня)\r\nlet frameCount = 0;\r\nlet score = 0;\r\nlet isGameOver = false; // Флаг для проверки поражения\r\nlet level = 1;  // Переменная для уровня\r\n\r\n// Загружаем лучший результат из localStorage\r\nlet bestScore = localStorage.getItem('bestScore') ? parseInt(localStorage.getItem('bestScore')) : 0;\r\n\r\n// Управление\r\ndocument.addEventListener('keydown', (e) => {\r\n    if (e.key === ' ' || e.key === 'Spacebar') {  // Для пробела\r\n        if (isGameOver) {\r\n            resetGame(); // Сбрасываем игру, если она окончена\r\n        } else {\r\n            bird.velocity = bird.lift;\r\n            const beepSound = new Audio('https://zvukitop.com/wp-content/uploads/2021/01/pryjok-2.mp3');\r\n            beepSound.volume = 0.1;  // Уменьшаем громкость до 20%\r\n            beepSound.play();  // Воспроизводим новый звук при нажатии на пробел\r\n        }\r\n    }\r\n});\r\n\r\n// Звук, который будет воспроизводиться при загрузке страницы\r\nconst helloSound = new Audio('https://www.myinstants.com/media/sounds/meme-okay-lets-go.mp3');\r\n\r\n// Показываем кнопку \"Начать игру\" перед началом игры\r\nstartButton.addEventListener('click', () => {\r\n    startButton.style.display = 'none'; // Скрываем кнопку после старта\r\n    title.style.display = 'none'; // Скрываем заголовок\r\n    helloSound.play();  // Воспроизводим звук при старте игры\r\n\r\n    // Показываем канвас\r\n    canvas.style.display = 'block'; // Показываем канвас только после старта игры\r\n\r\n    // Запуск обратного отсчета\r\n    startCountdown();\r\n});\r\n\r\n// Функция обратного отсчета\r\nlet countdown = 3;\r\nfunction startCountdown() {\r\n    const countdownInterval = setInterval(() => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);  // Очистить canvas\r\n        ctx.fillStyle = 'black';\r\n        ctx.font = '100px Arial';\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillText(countdown, canvas.width / 2, canvas.height / 2);  // Пишем цифры на экране\r\n\r\n        // Если отсчет закончился, начинаем игру\r\n        if (countdown === 0) {\r\n            clearInterval(countdownInterval); // Останавливаем отсчет\r\n            gameLoop(); // Начинаем игру\r\n        }\r\n\r\n        countdown--;  // Уменьшаем цифру на 1\r\n    }, 500);  // 0.5 секунды для каждого числа\r\n}\r\n\r\n// Открытие модального окна Help\r\nhelpButton.addEventListener('click', () => {\r\n    helpModal.style.display = 'flex';\r\n});\r\n\r\n// Закрытие модального окна Help\r\ncloseHelpButton.addEventListener('click', () => {\r\n    helpModal.style.display = 'none';\r\n});\r\n\r\n// Переход на второй уровень при достижении 20 очков\r\nfunction levelUp() {\r\n    alert(\"Поздравляю! Вы прошли первый уровень!\");\r\n    level = 2;  // Устанавливаем второй уровень\r\n    backgroundImage = backgroundImage2; // Меняем фон на второй уровень\r\n    pipeGap = canvas.height / 4;  // Уменьшаем зазор между трубами на втором уровне\r\n}\r\n\r\n// Game loop\r\nfunction update() {\r\n    if (isGameOver) return; // Если игра окончена, не обновляем состояние игры\r\n\r\n    // Bird physics\r\n    bird.velocity += bird.gravity;\r\n    bird.velocity *= 0.95;\r\n    bird.y += bird.velocity;\r\n\r\n    // Keep bird in bounds\r\n    if (bird.y > canvas.height - bird.height) bird.y = canvas.height - bird.height;\r\n    if (bird.y < 0) bird.y = 0;\r\n\r\n    // Pipe generation\r\n    if (frameCount % 200 === 0) { // Увеличен интервал появления колонн\r\n        let pipeY = Math.random() * (canvas.height - pipeGap - 50) + 25;\r\n        pipes.push({ x: canvas.width, y: pipeY });\r\n    }\r\n\r\n    // Pipe movement\r\n    pipes = pipes.filter(pipe => pipe.x + pipeWidth > 0);\r\n    pipes.forEach(pipe => {\r\n        pipe.x -= 2;\r\n\r\n        // Check for collision\r\n        if (\r\n            bird.x < pipe.x + pipeWidth &&\r\n            bird.x + bird.width > pipe.x &&\r\n            (bird.y < pipe.y || bird.y + bird.height > pipe.y + pipeGap)\r\n        ) {\r\n            isGameOver = true; // Устанавливаем флаг проигрыша\r\n            if (score > bestScore) {\r\n                bestScore = score; // Если текущий результат лучше, обновляем лучший результат\r\n                localStorage.setItem('bestScore', bestScore); // Сохраняем лучший результат в localStorage\r\n            }\r\n\r\n            // Воспроизводим звук проигрыша\r\n            gameOverSound.play();\r\n        }\r\n\r\n        // Score tracking\r\n        if (pipe.x + pipeWidth === bird.x) {\r\n            score++;\r\n        }\r\n    });\r\n\r\n    // Переход на второй уровень при достижении 10 очков\r\n    if (score >= 10 && level === 1) {\r\n        levelUp();\r\n    }\r\n\r\n    // Показать сообщение о победе при достижении 20 очков на втором уровне\r\nif (score >= 20 && level === 2) {\r\n    // Сохраняем результат в localStorage перед переходом на страницу победы\r\n    localStorage.setItem('finalScore', score);\r\n    window.location.href = \"win.html\"; // Перенаправляем на страницу с поздравлением\r\n}\r\n\r\n\r\n    frameCount++;\r\n}\r\n\r\nfunction draw() {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw background в зависимости от уровня\r\n    if (level === 1) {\r\n        ctx.drawImage(backgroundImage1, 0, 0, canvas.width, canvas.height);\r\n    } else {\r\n        ctx.drawImage(backgroundImage2, 0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    // Draw bird (заменим желтый квадрат на изображение)\r\n    const birdImage = new Image();\r\n    birdImage.src = 'https://png.klev.club/uploads/posts/2024-03/png-klev-club-p-mario-png-33.png';  // Путь к изображению птицы\r\n    ctx.drawImage(birdImage, bird.x, bird.y, bird.width, bird.height);\r\n\r\n    // Draw pipes with images\r\n    pipes.forEach(pipe => {\r\n        // Верхняя часть трубы (перевернутая)\r\n        ctx.save(); // Сохраняем текущие настройки контекста\r\n        ctx.translate(pipe.x, pipe.y); // Перемещаем начало координат\r\n        ctx.scale(1, -1); // Переворачиваем по оси Y\r\n        ctx.drawImage(pipeTop, 0, 0, pipeWidth, pipe.y);  // Рисуем верхнюю трубу с правильными пропорциями\r\n        ctx.restore(); // Восстанавливаем настройки контекста\r\n\r\n        // Нижняя часть трубы\r\n        ctx.drawImage(pipeBottom, pipe.x, pipe.y + pipeGap, pipeWidth, canvas.height - pipe.y - pipeGap); // Рисуем нижнюю трубу\r\n    });\r\n\r\n    // Draw score\r\n    ctx.fillStyle = 'black';\r\n    ctx.font = '20px Arial';\r\n    ctx.fillText(`Score: ${score}`, 50, 40);  // Располагаем \"Score\"\r\n\r\n    // Draw best score\r\n    ctx.fillText(`Best: ${bestScore}`, 50, 70);  // Располагаем \"Best\"\r\n\r\n    // Если игра окончена, показываем картинку\r\n    if (isGameOver) {\r\n        ctx.drawImage(gameOverImage, canvas.width / 4, canvas.height / 4, canvas.width / 2, canvas.height / 4);  // Отображаем картинку поражения\r\n    }\r\n}\r\n\r\nfunction resetGame() {\r\n    bird.y = canvas.height / 2;\r\n    bird.velocity = 0;\r\n    pipes = [];\r\n    score = 0;\r\n    frameCount = 0;\r\n    isGameOver = false; // Сбрасываем флаг проигрыша\r\n    level = 1;  // Возвращаем уровень на 1\r\n    pipeGap = canvas.height / 3;  // Возвращаем зазор между трубами на первый уровень\r\n    backgroundImage = backgroundImage1;  // Возвращаем фон на первый уровень\r\n\r\n    // Удаляем лучший результат из localStorage при сбросе игры\r\n    localStorage.removeItem('bestScore');\r\n\r\n    startButton.style.display = 'none';  // Скрываем кнопку \"Начать игру\"\r\n    title.style.display = 'none';  // Скрываем заголовок \"Flappy Mario\"\r\n}\r\n\r\n\r\n// Main game loop\r\nfunction gameLoop() {\r\n    update();\r\n    draw();\r\n    requestAnimationFrame(gameLoop);\r\n}\r\n"]}